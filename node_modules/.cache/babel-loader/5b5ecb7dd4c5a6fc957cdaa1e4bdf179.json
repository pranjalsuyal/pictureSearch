{"ast":null,"code":"var _jsxFileName = \"/home/kuliza-287/Code/picturesearch/src/components/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\nimport GroupButton from \"./GroupButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, Typography } from \"@material-ui/core\"; // import { createStore } from \"redux\";\n// import { Provider } from \"react-redux\";\n// import allReducers from \"../reducers\";\n\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  ContainerStyle: {\n    marginTop: \"20px\"\n  }\n}); // const initialState = {\n//   term: \"\",\n//   images: [],\n// };\n// function reducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"SEARCH\":\n//       return {\n//         term: action.payload,\n//       };\n//     // return state.set(\"term\", action.payload);\n//     case \"IMG_ARRAY\":\n//       return {\n//         images: action.payload,\n//       };\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n// const store = createStore(\n//   allReducers,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// store.dispatch({ type: \"ADD\", payload: \"Mountain\" });\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchSubmit = async term => {\n      const res = await axios.get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term,\n          per_page: 20\n        },\n        headers: {\n          Authorization: \"Client-ID RxOfRHYrs4q27UpD2Fpa8HP-DmhQLqE8tdYIbcMsZLk\"\n        }\n      }); // this.searchTerm = term;\n      // this.setState({ images: res.data.results });\n      // this.props.store.dispatch({ type: \"IMG_ARRAY\", payload: res.data.results });\n\n      this.props.dispatch({\n        type: \"IMG_ARRAY\",\n        payload: res.data.results\n      }); // console.log(store, \"store\");\n    };\n  } // state = { images: [] };\n\n\n  componentDidMount() {\n    this.onSearchSubmit(\"Mountain\"); // let searchTerm = \"Mountain\";\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    console.log(this.props, \"props\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"md\",\n      className: classes.ContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSubmit: this.onSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GroupButton, {\n      onSubmit: this.onSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      glutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"hello\"), console.log(this.props.images, \"img\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  term: state.term,\n  images: state.images\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(App));","map":{"version":3,"sources":["/home/kuliza-287/Code/picturesearch/src/components/App.js"],"names":["React","axios","SearchBar","ImageList","GroupButton","Container","Grid","withStyles","Typography","connect","styles","theme","root","flexGrow","ContainerStyle","marginTop","App","Component","constructor","props","onSearchSubmit","term","res","get","params","query","per_page","headers","Authorization","dispatch","type","payload","data","results","componentDidMount","render","classes","console","log","images","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\nimport GroupButton from \"./GroupButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, Typography } from \"@material-ui/core\";\n// import { createStore } from \"redux\";\n// import { Provider } from \"react-redux\";\n// import allReducers from \"../reducers\";\nimport { connect } from \"react-redux\";\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  ContainerStyle: {\n    marginTop: \"20px\",\n  },\n});\n\n// const initialState = {\n//   term: \"\",\n//   images: [],\n// };\n\n// function reducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"SEARCH\":\n//       return {\n//         term: action.payload,\n//       };\n//     // return state.set(\"term\", action.payload);\n//     case \"IMG_ARRAY\":\n//       return {\n//         images: action.payload,\n//       };\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n\n// const store = createStore(\n//   allReducers,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// store.dispatch({ type: \"ADD\", payload: \"Mountain\" });\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // state = { images: [] };\n\n  onSearchSubmit = async (term) => {\n    const res = await axios.get(\"https://api.unsplash.com/search/photos\", {\n      params: { query: term, per_page: 20 },\n      headers: {\n        Authorization: \"Client-ID RxOfRHYrs4q27UpD2Fpa8HP-DmhQLqE8tdYIbcMsZLk\",\n      },\n    });\n    // this.searchTerm = term;\n    // this.setState({ images: res.data.results });\n    // this.props.store.dispatch({ type: \"IMG_ARRAY\", payload: res.data.results });\n    this.props.dispatch({\n      type: \"IMG_ARRAY\",\n      payload: res.data.results,\n    });\n    // console.log(store, \"store\");\n  };\n\n  componentDidMount() {\n    this.onSearchSubmit(\"Mountain\");\n    // let searchTerm = \"Mountain\";\n  }\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props, \"props\");\n    return (\n      <div className={classes.root}>\n        <Container maxWidth=\"md\" className={classes.ContainerStyle}>\n          {/* <div className=\"ui container\" style={{ marginTop: \"15px\" }}> */}\n          {/* <Grid container> */}\n          <SearchBar onSubmit={this.onSearchSubmit} />\n          {/* </Grid> */}\n          <GroupButton onSubmit={this.onSearchSubmit} />\n          <Typography variant=\"h2\" glutterBottom>\n            {/* {console.log(this.props.store.getState(), \"here\")} */}\n            {/* {this.searchTerm} Images */}hello\n          </Typography>\n          {console.log(this.props.images, \"img\")}\n          {/* <ImageList images={this.state.images} /> */}\n          {/* <ImageList images={props.store.getState().images} /> */}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  term: state.term,\n  images: state.images,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(App));\n"]},"metadata":{},"sourceType":"module"}